{"ast":null,"code":"// Estadísticos z para niveles de confianza comunes\nconst Z_SCORES = {\n  90: 1.645,\n  95: 1.96,\n  99: 2.576\n};\n//proporciona las herramientas matemáticas fundamentales para la estimación por intervalos de confianza y la planificación del muestreo \nexport const calculateConfidenceInterval = ({\n  mean,\n  stdDev,\n  sampleSize,\n  confidenceLevel\n}) => {\n  const zScore = Z_SCORES[confidenceLevel];\n  if (!zScore) throw new Error('Nivel de confianza no soportado');\n  const standardError = stdDev / Math.sqrt(sampleSize);\n  const margin = zScore * standardError;\n  return {\n    lower: mean - margin,\n    upper: mean + margin,\n    margin\n  };\n};\nexport const determineSampleSize = ({\n  margin,\n  stdDev,\n  confidenceLevel\n}) => {\n  const zScore = Z_SCORES[confidenceLevel];\n  if (!zScore) throw new Error('Nivel de confianza no soportado');\n  return Math.ceil(Math.pow(zScore * stdDev / margin, 2));\n};","map":{"version":3,"names":["Z_SCORES","calculateConfidenceInterval","mean","stdDev","sampleSize","confidenceLevel","zScore","Error","standardError","Math","sqrt","margin","lower","upper","determineSampleSize","ceil","pow"],"sources":["C:/Users/mario/Desktop/Estimacion y muestreo - copia/src/utils/statsCalc.js"],"sourcesContent":["// Estadísticos z para niveles de confianza comunes\nconst Z_SCORES = {\n  90: 1.645,\n  95: 1.96,\n  99: 2.576\n};\n//proporciona las herramientas matemáticas fundamentales para la estimación por intervalos de confianza y la planificación del muestreo \nexport const calculateConfidenceInterval = ({ mean, stdDev, sampleSize, confidenceLevel }) => {\n  const zScore = Z_SCORES[confidenceLevel];\n  if (!zScore) throw new Error('Nivel de confianza no soportado');\n\n  const standardError = stdDev / Math.sqrt(sampleSize);\n  const margin = zScore * standardError;\n  \n  return {\n    lower: mean - margin,\n    upper: mean + margin,\n    margin\n  };\n};\n\nexport const determineSampleSize = ({ margin, stdDev, confidenceLevel }) => {\n  const zScore = Z_SCORES[confidenceLevel];\n  if (!zScore) throw new Error('Nivel de confianza no soportado');\n  return Math.ceil(Math.pow((zScore * stdDev) / margin, 2));\n};"],"mappings":"AAAA;AACA,MAAMA,QAAQ,GAAG;EACf,EAAE,EAAE,KAAK;EACT,EAAE,EAAE,IAAI;EACR,EAAE,EAAE;AACN,CAAC;AACD;AACA,OAAO,MAAMC,2BAA2B,GAAGA,CAAC;EAAEC,IAAI;EAAEC,MAAM;EAAEC,UAAU;EAAEC;AAAgB,CAAC,KAAK;EAC5F,MAAMC,MAAM,GAAGN,QAAQ,CAACK,eAAe,CAAC;EACxC,IAAI,CAACC,MAAM,EAAE,MAAM,IAAIC,KAAK,CAAC,iCAAiC,CAAC;EAE/D,MAAMC,aAAa,GAAGL,MAAM,GAAGM,IAAI,CAACC,IAAI,CAACN,UAAU,CAAC;EACpD,MAAMO,MAAM,GAAGL,MAAM,GAAGE,aAAa;EAErC,OAAO;IACLI,KAAK,EAAEV,IAAI,GAAGS,MAAM;IACpBE,KAAK,EAAEX,IAAI,GAAGS,MAAM;IACpBA;EACF,CAAC;AACH,CAAC;AAED,OAAO,MAAMG,mBAAmB,GAAGA,CAAC;EAAEH,MAAM;EAAER,MAAM;EAAEE;AAAgB,CAAC,KAAK;EAC1E,MAAMC,MAAM,GAAGN,QAAQ,CAACK,eAAe,CAAC;EACxC,IAAI,CAACC,MAAM,EAAE,MAAM,IAAIC,KAAK,CAAC,iCAAiC,CAAC;EAC/D,OAAOE,IAAI,CAACM,IAAI,CAACN,IAAI,CAACO,GAAG,CAAEV,MAAM,GAAGH,MAAM,GAAIQ,MAAM,EAAE,CAAC,CAAC,CAAC;AAC3D,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}